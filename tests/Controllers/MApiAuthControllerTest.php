<?php
/*
 * GBALib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace GBALib\Tests;

use GBALib\APIException;
use GBALib\Exceptions;
use GBALib\APIHelper;
use GBALib\Models;

class MApiAuthControllerTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var \GBALib\Controllers\MApiAuthController Controller instance
     */
    protected static $controller;

    /**
     * @var HttpCallBackCatcher Callback
     */
    protected $httpResponse;

    /**
     * Setup test class
     */
    public static function setUpBeforeClass()
    {
        $client = new \GBALib\GBAClient();
        self::$controller = $client->getMApiAuth();
    }

    /**
     * Setup test
     */
    protected function setUp()
    {
        $this->httpResponse = new HttpCallBackCatcher();
    }

    /**
     * Получить JWT токен, через авторизацию подпользователем системы
     */
    public function testLogin()
    {
        // Parameters for the API call
        $appid = 10729;
        $deviceid = '12356789n';
        $login = 'pasha.klyuchnikov@gmail.com';
        $pass = 30031990;
        $useragent = 'androidphone.com.ut.android.action1.0';
        $sig = 'bf78bd564331ff847731c6f24321b9f6';

        // Set callback and perform API call
        self::$controller->setHttpCallBack($this->httpResponse);
        try {
            self::$controller->login($appid, $deviceid, $login, $pass, $useragent, $sig);
        } catch (APIException $e) {
        }

        // Test response code
        $this->assertEquals(
            200,
            $this->httpResponse->getResponse()->getStatusCode(),
            "Status is not 200"
        );
    }

    /**
     * Получить JWT токен, через авторизацию подпользователем системы
     */
    public function testRegister()
    {
        // Parameters for the API call
        $name = 'Паша Ключников';
        $email = 'pasha.klyuchnikov@gmail.com';
        $password = 30031990;
        $departmentId = 1;

        // Set callback and perform API call
        self::$controller->setHttpCallBack($this->httpResponse);
        try {
            self::$controller->register($name, $email, $password, $departmentId);
        } catch (APIException $e) {
        }

        // Test response code
        $this->assertEquals(
            200,
            $this->httpResponse->getResponse()->getStatusCode(),
            "Status is not 200"
        );
    }

    /**
     * Обновление токена
     */
    public function testRefresh()
    {
        // Parameters for the API call
        $contentType = 'application/x-www-form-urlencoded';
        $accept = 'application/json';
        $id2ClientToken = '2b0bd623-bcaa-11a0-947c-2d01c96a8417';
        $appid = 10729;
        $deviceid = '12356789n';
        $useragent = 'androidphone.com.ut.android.action1.0';

        // Set callback and perform API call
        self::$controller->setHttpCallBack($this->httpResponse);
        try {
            self::$controller->refresh($contentType, $accept, $id2ClientToken, $appid, $deviceid, $useragent);
        } catch (APIException $e) {
        }

        // Test response code
        $this->assertEquals(
            200,
            $this->httpResponse->getResponse()->getStatusCode(),
            "Status is not 200"
        );
    }
}
