<?php
/*
 * GBALib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace GBALib\Tests;

use GBALib\APIException;
use GBALib\Exceptions;
use GBALib\APIHelper;
use GBALib\Models;

class MApiMobileControllerTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var \GBALib\Controllers\MApiMobileController Controller instance
     */
    protected static $controller;

    /**
     * @var HttpCallBackCatcher Callback
     */
    protected $httpResponse;

    /**
     * Setup test class
     */
    public static function setUpBeforeClass()
    {
        $client = new \GBALib\GBAClient();
        self::$controller = $client->getMApiMobile();
    }

    /**
     * Setup test
     */
    protected function setUp()
    {
        $this->httpResponse = new HttpCallBackCatcher();
    }

    /**
     * Todo Add description for test testRefresh
     */
    public function testRefresh()
    {
        // Parameters for the API call
        $grantType = 'refresh_token';
        $refreshToken = 'def50200333b6e0fa407ac011ffa5cc4cf8edaef338a0600aa94ed690ca15b22ab384b9b6e5ee80c97381998d586b605afad8d345eac859667f9f2a8fd0656105a9150b5f754e62bc0ecc443f4b3781ccaf758f628824f1a6212b665ed00e6f794fa9868bab78ce64d13b6d63f04f536614e49c7797773ca9ed4d1fe414616141023b70e408ae022bdecb419cf39698ff7dfcbdedda7e289e39bb100d21333221da5a1a7477815d1d21c00c6883a4162ae2de6cc2e2da20ae271a050c443ae0af91ef8db5c4132dbc653ae26cb1d5855cd95efb96ab3d53834ce7d41dcae25229eaaf02f24a679eb12b5ccf3b3b502412c92d286a0ea4998087ac5a8410ebc7a2ecbb8558e888706680434346fcf3520212043cd5b32cc2af9e702a641e70a470d990d82bd5dc2c09293c647361d2d1d99f4ca2179cadc522940be7c60a024e50071fe267720204f2c87a256479030c8a1d49c58727c9f54b768a0ded1b0965a822';
        $clientId = 3;
        $clientSecret = 'rUXwMfPsNIfj05Luf5GmDz1Uij7wqgzOmqap08a5';

        // Set callback and perform API call
        self::$controller->setHttpCallBack($this->httpResponse);
        try {
            self::$controller->refresh($grantType, $refreshToken, $clientId, $clientSecret);
        } catch (APIException $e) {
        }

        // Test response code
        $this->assertEquals(
            200,
            $this->httpResponse->getResponse()->getStatusCode(),
            "Status is not 200"
        );
    }

    /**
     * Todo Add description for test testLogin
     */
    public function testLogin()
    {
        // Parameters for the API call
        $grantType = 'password';
        $clientId = 3;
        $clientSecret = 'rUXwMfPsNIfj05Luf5GmDz1Uij7wqgzOmqap08a5';
        $username = 'pasha.klyuchnikov@gmail.com';
        $password = 30031990;
        $appid = 10729;
        $sig = '4a147a5328208feffa308e777c0d596e046fcc025db7b9fa1cc8577d6b8b183e';

        // Set callback and perform API call
        self::$controller->setHttpCallBack($this->httpResponse);
        try {
            self::$controller->login($grantType, $clientId, $clientSecret, $username, $password, $appid, $sig);
        } catch (APIException $e) {
        }

        // Test response code
        $this->assertEquals(
            200,
            $this->httpResponse->getResponse()->getStatusCode(),
            "Status is not 200"
        );
    }
}
